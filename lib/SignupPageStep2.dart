import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import 'package:myproject/main.dart';

class SignupPageStep2 extends StatefulWidget {
  final String password;
  final String email;

  SignupPageStep2({
    required this.password,
    required this.email,
  });

  @override
  _SignupPageStep2State createState() => _SignupPageStep2State();
}

class _SignupPageStep2State extends State<SignupPageStep2> {
  final TextEditingController firstNameController = TextEditingController();
  final TextEditingController lastNameController = TextEditingController();
  final TextEditingController phoneNumberController = TextEditingController();
  final TextEditingController birthDateController = TextEditingController();
  final TextEditingController studentIdController = TextEditingController();
  final TextEditingController facultyController = TextEditingController();
  final TextEditingController majorController = TextEditingController();
  final TextEditingController yearController = TextEditingController();
  DateTime? selectedBirthDate;
  int? selectedGrade; // ‡∏Ñ‡πà‡∏≤ Grade ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  bool isLoading = false;

  Future<void> _selectBirthDate(BuildContext context) async {
    DateTime? pickedDate = await showDatePicker(
      context: context,
      initialDate: DateTime.now(),
      firstDate: DateTime(1900),
      lastDate: DateTime.now(),
    );

    if (pickedDate != null) {
      setState(() {
        selectedBirthDate = pickedDate;
        birthDateController.text =
            "${pickedDate.year}-${pickedDate.month.toString().padLeft(2, '0')}-${pickedDate.day.toString().padLeft(2, '0')}"; // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYY-MM-DD
      });

      print(
          "‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ${birthDateController.text}"); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô Console
    }
  }

Future<void> _registerUser() async {
  List<String> missingFields = [];

  if (firstNameController.text.isEmpty) missingFields.add("‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á");
  if (lastNameController.text.isEmpty) missingFields.add("‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•");
  if (phoneNumberController.text.isEmpty) missingFields.add("‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå");
  if (selectedBirthDate == null) missingFields.add("‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î");
  if (studentIdController.text.isEmpty) missingFields.add("‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤"); // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  if (facultyController.text.isEmpty) missingFields.add("‡∏Ñ‡∏ì‡∏∞");
  if (majorController.text.isEmpty) missingFields.add("‡∏™‡∏≤‡∏Ç‡∏≤");
  if (selectedGrade == null) missingFields.add("‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô");

  if (missingFields.isNotEmpty) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Text("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö: ${missingFields.join(', ')}"),
        backgroundColor: Colors.red,
      ),
    );
    return;
  }

  setState(() {
    isLoading = true;
  });

  try {
    // ‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å Firebase Authentication
    UserCredential userCredential =
        await FirebaseAuth.instance.createUserWithEmailAndPassword(
      email: widget.email,
      password: widget.password,
    );

    String firebaseUID = userCredential.user!.uid;
    String userID = studentIdController.text.trim(); // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å

    // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Firestore ‡∏û‡∏£‡πâ‡∏≠‡∏° `user_id` ‡πÅ‡∏•‡∏∞ `allowance = 0`
    await FirebaseFirestore.instance
        .collection('users')
        .doc(firebaseUID)
        .set({
      'firebase_uid': firebaseUID,
      'user_id': userID, // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á studentIdController
      'stu_email': widget.email,
      'stu_firstname': firstNameController.text,
      'stu_lastname': lastNameController.text,
      'stu_birthdate': selectedBirthDate!.toIso8601String(),
      'stu_tel': phoneNumberController.text,
      'stu_faculty': facultyController.text,
      'stu_major': majorController.text,
      'stu_grade': selectedGrade,
      'status': "",
      'role': "user", // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ role ‡πÄ‡∏õ‡πá‡∏ô "user"
      'allowance': 0, // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô `allowance = 0`
      'createdAt': DateTime.now(),
    });

    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text('‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!')),
    );

    // ‚úÖ ‡∏û‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Login
    Navigator.pushReplacement(
      context,
      MaterialPageRoute(builder: (context) => LoginPage()),
    );
  } catch (e) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(content: Text('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: $e')),
    );
  } finally {
    setState(() {
      isLoading = false;
    });
  }
}



  @override
  Widget build(BuildContext context) {
    var size = MediaQuery.of(context).size;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.redAccent,
        title: Text('Sign Up ',style: TextStyle(color: Colors.white),),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          children: [
            TextField(
              controller: firstNameController,
              decoration: InputDecoration(
                  labelText: '‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á', border: OutlineInputBorder()),
            ),
            SizedBox(height: size.height * 0.01),
            TextField(
              controller: lastNameController,
              decoration: InputDecoration(
                  labelText: '‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•', border: OutlineInputBorder()),
            ),
            SizedBox(height: size.height * 0.01),
            TextField(
              controller: phoneNumberController,
              decoration: InputDecoration(
                  labelText: '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå', border: OutlineInputBorder()),
            ),
            SizedBox(height: size.height * 0.01),
            TextField(
              controller: studentIdController,
              decoration: InputDecoration(
                  labelText: '‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤', border: OutlineInputBorder()),
            ),
            SizedBox(height: size.height * 0.01),
            TextField(
              controller: birthDateController,
              readOnly: true, // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏≠‡∏á
              decoration: InputDecoration(
                labelText: "‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î",
                hintText:
                    "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î", // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô
                border: OutlineInputBorder(),
                suffixIcon: IconButton(
                  icon: Icon(Icons.calendar_today),
                  onPressed: () => _selectBirthDate(context),
                ),
              ),
            ),
            SizedBox(height: size.height * 0.01),
            TextField(
              controller: facultyController,
              decoration: InputDecoration(
                  labelText: '‡∏Ñ‡∏ì‡∏∞', border: OutlineInputBorder()),
            ),
            SizedBox(height: size.height * 0.01),
            TextField(
              controller: majorController,
              decoration: InputDecoration(
                  labelText: '‡∏™‡∏≤‡∏Ç‡∏≤', border: OutlineInputBorder()),
            ),
            SizedBox(height: size.height * 0.01),
            DropdownButtonFormField<int>(
              decoration: InputDecoration(
                labelText: "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô",
                border: OutlineInputBorder(),
              ),
              value: selectedGrade,
              items: const [
                DropdownMenuItem(value: 1, child: Text("‡∏õ‡∏µ 1")),
                DropdownMenuItem(value: 2, child: Text("‡∏õ‡∏µ 2")),
                DropdownMenuItem(value: 3, child: Text("‡∏õ‡∏µ 3")),
                DropdownMenuItem(value: 4, child: Text("‡∏õ‡∏µ 4")),
                DropdownMenuItem(value: 5, child: Text("‡∏õ‡∏µ 5")),
              ],
              onChanged: (value) {
                setState(() {
                  selectedGrade = value!;
                });
                print(
                    "‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: $selectedGrade"); // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô console
              },
            ),
            SizedBox(height: size.height * 0.01),
            isLoading
                ? CircularProgressIndicator() // ‡πÅ‡∏™‡∏î‡∏á Loading ‡∏Ç‡∏ì‡∏∞‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                : SizedBox(
                  width: size.width * 0.85,
                  child: ElevatedButton(
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.redAccent
                      ),
                      onPressed: _registerUser, // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å
                      child: Text("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å",style: TextStyle(
                        color: Colors.white, fontSize: 16,fontWeight: FontWeight.bold
                      ),),
                    ),
                ),
          ],
        ),
      ),
    );
  }
}
